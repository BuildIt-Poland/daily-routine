version: 2.1
orbs:
  cypress: cypress-io/cypress@1.8.0
  aws-s3: circleci/aws-s3@1.0.11
jobs:
  lint_and_unit_test:
    working_directory: ~/repo
    docker:
      - image: circleci/node:10.16.1
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm ci
      - run:
          name: Run Linter
          command: npm run lint
      - run:
          name: Code Formatting Check
          command: npm run format:check
      - run:
          name: Run Unit Tests With Code Coverage
          command: npm run test:ci
      - run:
          name: Install codecov
          command: sudo npm install -g codecov
      - run:
          name: Upload Coverage Report to Codecov
          command: codecov
      - save_cache:
          paths:
            - ~/repo/node_modules
          key: node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - persist_to_workspace:
          root: .
          paths: node_modules
      - run:
          name: 'testing'
          command: 'ls -a'
  e2e_test: cypress/run
  build:
    working_directory: ~/repo
    docker:
      - image: circleci/node:10.16.1
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: Perform Test Application Build
          command: 'npm run build'
      - save_cache:
          paths:
            - ~/repo/node_modules
          key: node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - persist_to_workspace:
          root: .
          paths:
            - build
      - run:
          name: 'testing'
          command: 'ls ./build -a'
  build_and_deploy:
    working_directory: ~/repo
    docker:
      - image: 'circleci/python:2.7'
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - attach_workspace:
          at: ~/repo
      - run:
          name: 'testing'
          command: 'ls ./build -a'
      - aws-s3/sync:
          from: './build'
          to: '${S3_BUCKET_PATH}'
          arguments: |
            --acl public-read \
            --delete \
            --cache-control "max-age=86400"
workflows:
  version: 2
  build_and_test:
    jobs:
      - lint_and_unit_test
#      - e2e_test:
#          start: npm start
#          wait-on: 'http://localhost:3000'
      - build
      - build_and_deploy:
          requires:
            - lint_and_unit_test
            - build
#            - e2e_test
#          filters:
#            branches:
#              only:
#                - master
